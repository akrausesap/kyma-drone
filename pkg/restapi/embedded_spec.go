// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A simple API to controll remote controlled drones",
    "title": "Kyma Drone",
    "contact": {
      "name": "Johannes Engelke"
    },
    "license": {
      "name": "Apache 2.0"
    },
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/backFlip": {
      "post": {
        "description": "BackFlip tells the Minidrone to do a Back Flip",
        "operationId": "backFlipDrone",
        "responses": {
          "204": {
            "description": "Drone performed a flip"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/backward": {
      "post": {
        "description": "Backward tells drone to go backward.",
        "operationId": "backwardDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning backward"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/clawControl": {
      "post": {
        "description": "ClawControl tells drone to open or close the claw.",
        "operationId": "clawControlDrone",
        "parameters": [
          {
            "description": "mode - either ClawOpen or ClawClosed",
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClawModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is setting the lights"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/clockwise": {
      "post": {
        "description": "Clockwise tells drone to turn clockwise.",
        "operationId": "clockwiseDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning clockwise"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/counterClockwise": {
      "post": {
        "description": "CounterClockwise tells drone to go turn counter clockwise.",
        "operationId": "counterClockwiseDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning counter clockwise"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/down": {
      "post": {
        "description": "Down tells drone to go down.",
        "operationId": "downDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning down"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/emergency": {
      "post": {
        "description": "Emergency tells the Minidrone to perform an emergency shutdown",
        "operationId": "emergencyDrone",
        "responses": {
          "204": {
            "description": "Drone is killed"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/flatTrim": {
      "post": {
        "description": "FlatTrim tells the Minidrone to trim the sensors",
        "operationId": "flatTrimDrone",
        "responses": {
          "204": {
            "description": "Drone is trimmed"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/forward": {
      "post": {
        "description": "Forward tells drone to go forward.",
        "operationId": "forwardDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning forward"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/frontFlip": {
      "post": {
        "description": "FrontFlip tells the Minidrone to do a Front Flip",
        "operationId": "frontFlipDrone",
        "responses": {
          "204": {
            "description": "Drone performed a flip"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/gunControl": {
      "post": {
        "description": "GunControl tells the Minidrone to shoot",
        "operationId": "gunControlDrone",
        "responses": {
          "204": {
            "description": "Drone shot the canno^"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/halt": {
      "post": {
        "description": "Halt stops minidrone driver",
        "operationId": "haltDrone",
        "responses": {
          "204": {
            "description": "Drone halted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/land": {
      "post": {
        "description": "Land tells the Minidrone to land",
        "operationId": "landDrone",
        "responses": {
          "204": {
            "description": "Drone is landing"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/left": {
      "post": {
        "description": "Left tells drone to go left.",
        "operationId": "leftDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning left"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/leftFlip": {
      "post": {
        "description": "LeftFlip tells the Minidrone to do a left Flip",
        "operationId": "leftFlipDrone",
        "responses": {
          "204": {
            "description": "Drone performed a flip"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/lightControl": {
      "post": {
        "description": "LightControl tells drone to set the light mode.",
        "operationId": "lightControlDrone",
        "parameters": [
          {
            "description": "mode - either LightFixed, LightBlinked, or LightOscillated \n intensity - Light intensity from 0 (OFF) to 100 (Max intensity).",
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LightModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is setting the lights"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/right": {
      "post": {
        "description": "Right tells drone to go right.",
        "operationId": "rightDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning right"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/rightFlip": {
      "post": {
        "description": "RightFlip tells the Minidrone to do a Right Flip",
        "operationId": "rightFlipDrone",
        "responses": {
          "204": {
            "description": "Drone performed a flip"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/shipPackage": {
      "post": {
        "description": "shipPackage tells drone to ship a package.",
        "operationId": "shipPackage",
        "parameters": [
          {
            "description": "OrderCode - OrderID which will be returned as soon as the drone is landed.",
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ShippingModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is setting the lights"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/start": {
      "post": {
        "description": "Start tells driver to get ready to do work",
        "operationId": "startDrone",
        "responses": {
          "204": {
            "description": "Drone started"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/stop": {
      "post": {
        "description": "Stop tells the drone to stop moving in any direction and simply hover in place",
        "operationId": "stopDrone",
        "responses": {
          "204": {
            "description": "Drone stoped"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/takeOff": {
      "post": {
        "description": "TakeOff tells the Minidrone to takeoff",
        "operationId": "takeOffDrone",
        "responses": {
          "204": {
            "description": "Drone took off"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/takePicture": {
      "post": {
        "description": "TakePicture tells the Minidrone to take a picture",
        "operationId": "takePictureDrone",
        "responses": {
          "204": {
            "description": "Picture taken"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/up": {
      "post": {
        "description": "Up tells drone to go up.",
        "operationId": "upDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning up"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ClawModel": {
      "type": "object",
      "required": [
        "mode"
      ],
      "properties": {
        "mode": {
          "type": "string"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LightModel": {
      "type": "object",
      "required": [
        "mode",
        "intensity"
      ],
      "properties": {
        "intensity": {
          "type": "integer",
          "format": "int32",
          "maximum": 100
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "ShippingModel": {
      "type": "object",
      "required": [
        "OrderCode"
      ],
      "properties": {
        "OrderCode": {
          "type": "string"
        }
      }
    },
    "ValueModel": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32",
          "maximum": 100
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A simple API to controll remote controlled drones",
    "title": "Kyma Drone",
    "contact": {
      "name": "Johannes Engelke"
    },
    "license": {
      "name": "Apache 2.0"
    },
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/backFlip": {
      "post": {
        "description": "BackFlip tells the Minidrone to do a Back Flip",
        "operationId": "backFlipDrone",
        "responses": {
          "204": {
            "description": "Drone performed a flip"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/backward": {
      "post": {
        "description": "Backward tells drone to go backward.",
        "operationId": "backwardDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning backward"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/clawControl": {
      "post": {
        "description": "ClawControl tells drone to open or close the claw.",
        "operationId": "clawControlDrone",
        "parameters": [
          {
            "description": "mode - either ClawOpen or ClawClosed",
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClawModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is setting the lights"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/clockwise": {
      "post": {
        "description": "Clockwise tells drone to turn clockwise.",
        "operationId": "clockwiseDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning clockwise"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/counterClockwise": {
      "post": {
        "description": "CounterClockwise tells drone to go turn counter clockwise.",
        "operationId": "counterClockwiseDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning counter clockwise"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/down": {
      "post": {
        "description": "Down tells drone to go down.",
        "operationId": "downDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning down"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/emergency": {
      "post": {
        "description": "Emergency tells the Minidrone to perform an emergency shutdown",
        "operationId": "emergencyDrone",
        "responses": {
          "204": {
            "description": "Drone is killed"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/flatTrim": {
      "post": {
        "description": "FlatTrim tells the Minidrone to trim the sensors",
        "operationId": "flatTrimDrone",
        "responses": {
          "204": {
            "description": "Drone is trimmed"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/forward": {
      "post": {
        "description": "Forward tells drone to go forward.",
        "operationId": "forwardDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning forward"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/frontFlip": {
      "post": {
        "description": "FrontFlip tells the Minidrone to do a Front Flip",
        "operationId": "frontFlipDrone",
        "responses": {
          "204": {
            "description": "Drone performed a flip"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/gunControl": {
      "post": {
        "description": "GunControl tells the Minidrone to shoot",
        "operationId": "gunControlDrone",
        "responses": {
          "204": {
            "description": "Drone shot the canno^"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/halt": {
      "post": {
        "description": "Halt stops minidrone driver",
        "operationId": "haltDrone",
        "responses": {
          "204": {
            "description": "Drone halted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/land": {
      "post": {
        "description": "Land tells the Minidrone to land",
        "operationId": "landDrone",
        "responses": {
          "204": {
            "description": "Drone is landing"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/left": {
      "post": {
        "description": "Left tells drone to go left.",
        "operationId": "leftDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning left"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/leftFlip": {
      "post": {
        "description": "LeftFlip tells the Minidrone to do a left Flip",
        "operationId": "leftFlipDrone",
        "responses": {
          "204": {
            "description": "Drone performed a flip"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/lightControl": {
      "post": {
        "description": "LightControl tells drone to set the light mode.",
        "operationId": "lightControlDrone",
        "parameters": [
          {
            "description": "mode - either LightFixed, LightBlinked, or LightOscillated \n intensity - Light intensity from 0 (OFF) to 100 (Max intensity).",
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LightModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is setting the lights"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/right": {
      "post": {
        "description": "Right tells drone to go right.",
        "operationId": "rightDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning right"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/rightFlip": {
      "post": {
        "description": "RightFlip tells the Minidrone to do a Right Flip",
        "operationId": "rightFlipDrone",
        "responses": {
          "204": {
            "description": "Drone performed a flip"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/shipPackage": {
      "post": {
        "description": "shipPackage tells drone to ship a package.",
        "operationId": "shipPackage",
        "parameters": [
          {
            "description": "OrderCode - OrderID which will be returned as soon as the drone is landed.",
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ShippingModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is setting the lights"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/start": {
      "post": {
        "description": "Start tells driver to get ready to do work",
        "operationId": "startDrone",
        "responses": {
          "204": {
            "description": "Drone started"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/stop": {
      "post": {
        "description": "Stop tells the drone to stop moving in any direction and simply hover in place",
        "operationId": "stopDrone",
        "responses": {
          "204": {
            "description": "Drone stoped"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/takeOff": {
      "post": {
        "description": "TakeOff tells the Minidrone to takeoff",
        "operationId": "takeOffDrone",
        "responses": {
          "204": {
            "description": "Drone took off"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/takePicture": {
      "post": {
        "description": "TakePicture tells the Minidrone to take a picture",
        "operationId": "takePictureDrone",
        "responses": {
          "204": {
            "description": "Picture taken"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/up": {
      "post": {
        "description": "Up tells drone to go up.",
        "operationId": "upDrone",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ValueModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Drone is turning up"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ClawModel": {
      "type": "object",
      "required": [
        "mode"
      ],
      "properties": {
        "mode": {
          "type": "string"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LightModel": {
      "type": "object",
      "required": [
        "mode",
        "intensity"
      ],
      "properties": {
        "intensity": {
          "type": "integer",
          "format": "int32",
          "maximum": 100,
          "minimum": 0
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "ShippingModel": {
      "type": "object",
      "required": [
        "OrderCode"
      ],
      "properties": {
        "OrderCode": {
          "type": "string"
        }
      }
    },
    "ValueModel": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32",
          "maximum": 100,
          "minimum": 0
        }
      }
    }
  }
}`))
}
