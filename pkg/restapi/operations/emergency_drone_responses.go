// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/joek/kyma-drone/pkg/models"
)

// EmergencyDroneNoContentCode is the HTTP code returned for type EmergencyDroneNoContent
const EmergencyDroneNoContentCode int = 204

/*EmergencyDroneNoContent Drone is killed

swagger:response emergencyDroneNoContent
*/
type EmergencyDroneNoContent struct {
}

// NewEmergencyDroneNoContent creates EmergencyDroneNoContent with default headers values
func NewEmergencyDroneNoContent() *EmergencyDroneNoContent {

	return &EmergencyDroneNoContent{}
}

// WriteResponse to the client
func (o *EmergencyDroneNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*EmergencyDroneDefault unexpected error

swagger:response emergencyDroneDefault
*/
type EmergencyDroneDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewEmergencyDroneDefault creates EmergencyDroneDefault with default headers values
func NewEmergencyDroneDefault(code int) *EmergencyDroneDefault {
	if code <= 0 {
		code = 500
	}

	return &EmergencyDroneDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the emergency drone default response
func (o *EmergencyDroneDefault) WithStatusCode(code int) *EmergencyDroneDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the emergency drone default response
func (o *EmergencyDroneDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the emergency drone default response
func (o *EmergencyDroneDefault) WithPayload(payload *models.ErrorModel) *EmergencyDroneDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the emergency drone default response
func (o *EmergencyDroneDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EmergencyDroneDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
