// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// StartDroneHandlerFunc turns a function with the right signature into a start drone handler
type StartDroneHandlerFunc func(StartDroneParams) middleware.Responder

// Handle executing the request and returning a response
func (fn StartDroneHandlerFunc) Handle(params StartDroneParams) middleware.Responder {
	return fn(params)
}

// StartDroneHandler interface for that can handle valid start drone params
type StartDroneHandler interface {
	Handle(StartDroneParams) middleware.Responder
}

// NewStartDrone creates a new http.Handler for the start drone operation
func NewStartDrone(ctx *middleware.Context, handler StartDroneHandler) *StartDrone {
	return &StartDrone{Context: ctx, Handler: handler}
}

/*StartDrone swagger:route POST /start startDrone

Start tells driver to get ready to do work

*/
type StartDrone struct {
	Context *middleware.Context
	Handler StartDroneHandler
}

func (o *StartDrone) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewStartDroneParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
