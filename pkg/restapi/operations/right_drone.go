// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RightDroneHandlerFunc turns a function with the right signature into a right drone handler
type RightDroneHandlerFunc func(RightDroneParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RightDroneHandlerFunc) Handle(params RightDroneParams) middleware.Responder {
	return fn(params)
}

// RightDroneHandler interface for that can handle valid right drone params
type RightDroneHandler interface {
	Handle(RightDroneParams) middleware.Responder
}

// NewRightDrone creates a new http.Handler for the right drone operation
func NewRightDrone(ctx *middleware.Context, handler RightDroneHandler) *RightDrone {
	return &RightDrone{Context: ctx, Handler: handler}
}

/*RightDrone swagger:route POST /right rightDrone

Right tells drone to go right.

*/
type RightDrone struct {
	Context *middleware.Context
	Handler RightDroneHandler
}

func (o *RightDrone) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRightDroneParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
