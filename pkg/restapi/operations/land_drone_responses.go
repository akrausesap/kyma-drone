// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/joek/kyma-drone/pkg/models"
)

// LandDroneNoContentCode is the HTTP code returned for type LandDroneNoContent
const LandDroneNoContentCode int = 204

/*LandDroneNoContent Drone is landing

swagger:response landDroneNoContent
*/
type LandDroneNoContent struct {
}

// NewLandDroneNoContent creates LandDroneNoContent with default headers values
func NewLandDroneNoContent() *LandDroneNoContent {

	return &LandDroneNoContent{}
}

// WriteResponse to the client
func (o *LandDroneNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*LandDroneDefault unexpected error

swagger:response landDroneDefault
*/
type LandDroneDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewLandDroneDefault creates LandDroneDefault with default headers values
func NewLandDroneDefault(code int) *LandDroneDefault {
	if code <= 0 {
		code = 500
	}

	return &LandDroneDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the land drone default response
func (o *LandDroneDefault) WithStatusCode(code int) *LandDroneDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the land drone default response
func (o *LandDroneDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the land drone default response
func (o *LandDroneDefault) WithPayload(payload *models.ErrorModel) *LandDroneDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the land drone default response
func (o *LandDroneDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LandDroneDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
