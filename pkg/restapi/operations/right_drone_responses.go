// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/joek/kyma-drone/pkg/models"
)

// RightDroneNoContentCode is the HTTP code returned for type RightDroneNoContent
const RightDroneNoContentCode int = 204

/*RightDroneNoContent Drone is turning right

swagger:response rightDroneNoContent
*/
type RightDroneNoContent struct {
}

// NewRightDroneNoContent creates RightDroneNoContent with default headers values
func NewRightDroneNoContent() *RightDroneNoContent {

	return &RightDroneNoContent{}
}

// WriteResponse to the client
func (o *RightDroneNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*RightDroneDefault unexpected error

swagger:response rightDroneDefault
*/
type RightDroneDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewRightDroneDefault creates RightDroneDefault with default headers values
func NewRightDroneDefault(code int) *RightDroneDefault {
	if code <= 0 {
		code = 500
	}

	return &RightDroneDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the right drone default response
func (o *RightDroneDefault) WithStatusCode(code int) *RightDroneDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the right drone default response
func (o *RightDroneDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the right drone default response
func (o *RightDroneDefault) WithPayload(payload *models.ErrorModel) *RightDroneDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the right drone default response
func (o *RightDroneDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RightDroneDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
