// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/joek/kyma-drone/pkg/models"
)

// LightControlDroneNoContentCode is the HTTP code returned for type LightControlDroneNoContent
const LightControlDroneNoContentCode int = 204

/*LightControlDroneNoContent Drone is setting the lights

swagger:response lightControlDroneNoContent
*/
type LightControlDroneNoContent struct {
}

// NewLightControlDroneNoContent creates LightControlDroneNoContent with default headers values
func NewLightControlDroneNoContent() *LightControlDroneNoContent {

	return &LightControlDroneNoContent{}
}

// WriteResponse to the client
func (o *LightControlDroneNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*LightControlDroneDefault unexpected error

swagger:response lightControlDroneDefault
*/
type LightControlDroneDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewLightControlDroneDefault creates LightControlDroneDefault with default headers values
func NewLightControlDroneDefault(code int) *LightControlDroneDefault {
	if code <= 0 {
		code = 500
	}

	return &LightControlDroneDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the light control drone default response
func (o *LightControlDroneDefault) WithStatusCode(code int) *LightControlDroneDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the light control drone default response
func (o *LightControlDroneDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the light control drone default response
func (o *LightControlDroneDefault) WithPayload(payload *models.ErrorModel) *LightControlDroneDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the light control drone default response
func (o *LightControlDroneDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LightControlDroneDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
